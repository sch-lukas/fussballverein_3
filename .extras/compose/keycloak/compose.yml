# Copyright (C) 2022 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Aufruf:   docker compose up
#           docker compose exec keycloak bash
#             ls -l /opt/keycloak/data/h2/keycloakdb.mv.db
#           docker compose down

# https://github.com/keycloak/keycloak/blob/main/quarkus/runtime/src/main/resources/application.properties
# https://www.keycloak.org/server/db
# https://www.keycloak.org/docs/latest/upgrading/index.html
# /opt/keycloak/lib/lib/com.h2database.h2-VERSION.jar
# /opt/keycloak/conf/keycloak.conf
# https://github.com/keycloak/keycloak/issues/39046
# java -jar h2-2.3.230.jar
#     https://github.com/keycloak/keycloak/blob/main/pom.xml#L97
#     https://github.com/keycloak/keycloak/blob/main/quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/configuration/mappers/DatabasePropertyMappers.java#L110
#     https://repo.maven.apache.org/maven2/com/h2database/h2/VERSION/h2-VERSION.jar
#     Generic H2 (Embedded)
#     JDBC URL:       jdbc:h2:tcp://localhost/C:/Zimmermann/volumes/keycloak/data/h2/keycloakdb
#     Benutzername:
#     Passwort:
#         Tabellen: USER_ENTITY, USER_ROLE_MAPPING, ...

services:
  keycloak:
    image: quay.io/keycloak/keycloak:26.4.0-0
    #image: keycloak/keycloak:26.4.0-0
    ports:
      - published: 8880
        target: 8080
      - published: 8843
        target: 8443
      # 9000 ist der Port von SonarQube, 9090 ist der Port von Prometheus
      - published: 9990
        target: 9000
    # command: ["start-dev", "--import-realm"]
    volumes:
      - type: bind
        source: C:/Zimmermann/volumes/keycloak/data
        # mit Unterverzeichnis h2
        target: /opt/keycloak/data
      - type: bind
        source: C:/Zimmermann/volumes/keycloak/tls/key.pem
        # https://www.keycloak.org/server/enabletls
        target: /opt/keycloak/conf/key.pem
        read_only: true
      - type: bind
        source: C:/Zimmermann/volumes/keycloak/tls/certificate.crt
        target: /opt/keycloak/conf/certificate.crt
        read_only: true
      #- type: bind
      #  source: export
      #  target: /opt/keycloak/data/import
      # ggf. /opt/keycloak/conf/keycloak.conf
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: tmp
      KC_BOOTSTRAP_ADMIN_PASSWORD: p
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/conf/certificate.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/conf/key.pem
      # https://www.keycloak.org/observability/health
      # https://www.keycloak.org/server/all-config#category-health
      KC_HEALTH_ENABLED: true
      # https://www.keycloak.org/observability/configuration-metrics
      KC_METRICS_ENABLED: true
      # https://www.keycloak.org/server/all-config#category-logging
      # https://www.keycloak.org/server/logging#_colors
      KC_LOG: console
      KC_LOG_CONSOLE_COLOR: true
    networks: [acme-network]
    hostname: keycloak
    container_name: keycloak
    #user: root
    user: keycloak:keycloak
    # https://www.keycloak.org/server/containers#_trying_keycloak_in_development_mode
    # --features=token-exchange
    entrypoint: ["/opt/keycloak/bin/kc.sh", "start-dev"]
    #entrypoint: ["/opt/keycloak/bin/kc.sh", "start-dev", "--help"]
    # https://docs.docker.com/reference/compose-file/services/#cap_drop
    # https://man7.org/linux/man-pages/man7/capabilities.7.html
    cap_drop: [ALL]
    healthcheck:
      # https://www.keycloak.org/server/health
      # https://gist.github.com/sarath-soman/5d9aec06953bbd0990c648605d4dba07
      # https://www.reddit.com/r/KeyCloak/comments/14a5a1y/how_to_enable_healthcheck_on_keycloak_on
      test:
        [
          CMD,
          "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"
        ]
      #test:
      #  [
      #    CMD,
      #    '[ -f /tmp/HealthCheck.java ] || echo "public class HealthCheck { public static void main(String[] args) throws java.lang.Throwable { java.net.URI uri = java.net.URI.create(args[0]); System.exit(java.net.HttpURLConnection.HTTP_OK == ((java.net.HttpURLConnection)uri.toURL().openConnection()).getResponseCode() ? 0 : 1); } }" > /tmp/HealthCheck.java && java /tmp/HealthCheck.java http://localhost:9000/health/live'
      #  ]
      interval: 30s
      timeout: 5s
      retries: 2
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: "2.0"
          memory: 4G
        reservations:
          cpus: "2.0"
          memory: 2G

networks:
  acme-network:
    name: acme-network
