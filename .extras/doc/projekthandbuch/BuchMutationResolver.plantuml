' Copyright (C) 2019 - present Juergen Zimmermann, Hochschule Karlsruhe
'
' This program is free software: you can redistribute it and/or modify
' it under the terms of the GNU General Public License as published by
' the Free Software Foundation, either version 3 of the License, or
' (at your option) any later version.
'
' This program is distributed in the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty of
' MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
' GNU General Public License for more details.
'
' You should have received a copy of the GNU General Public License
' along with this program.  If not, see <https://www.gnu.org/licenses/>.

' Preview durch <Alt>d

@startuml Controller-Klasse

interface Promise<T>

package @nestjs/graphql {
  annotation Resolver
  annotation UseGuards
  annotation UseInterceptors
  annotation Mutation
  annotation Args
}

package nest-keycloak-connect {
  class AuthGuard
  annotation Roles
}

package buch #DDDDDD {
  package service #FFFFFF {
    class BuchWriteService << control >>
  }

  class BuchDtoOhneRef << entity >>
  class BuchDTO << entity >>
  BuchDtoOhneRef <|-- BuchDTO

  interface IdInput {
      id: number
  }

  class BuchMutationResolver << control >> << @Resolver() >> << @UseGuards() >> << @UseInterceptors() >> {
    + @Mutation() @Roles() async create(@Args() buchDTO: BuchDTO): Promise<number>
    + @Mutation() @Roles() async update(@Args() buchDTO: BuchDtoOhneRef): Promise<number>
    + @Mutation() @Roles() async delete(@Args() id: IdInput): Promise<boolean>
  }

  BuchMutationResolver o-down-> "1" BuchWriteService : service

  BuchMutationResolver ..> BuchDTO
  BuchMutationResolver ..> BuchDtoOhneRef
  BuchMutationResolver ..> IdInput

  BuchMutationResolver .up.> Promise

  BuchMutationResolver .up.> Resolver

  BuchMutationResolver .up.> AuthGuard
  BuchMutationResolver .up.> Roles

  Roles .right[hidden].> Resolver
}

hide empty members

footer (c) Juergen Zimmermann

@enduml
